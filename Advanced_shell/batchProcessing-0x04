#!/bin/bash

# ============================================
# Script: batchProcessing-0x04
# Purpose: Parallel fetch of Pokémon data with process control
# ============================================

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
DATA_DIR="pokemon_data_parallel"
LOG_FILE="errors_parallel.log"
PIDS=()  # Store process IDs

mkdir -p "$DATA_DIR"
> "$LOG_FILE"  # Clear log

# Function to fetch data
fetch_pokemon() {
    local name="$1"
    local output="$DATA_DIR/${name}.json"
    local url="https://pokeapi.co/api/v2/pokemon/${name}"

    response=$(curl -s -w "%{http_code}" -o "$output" "$url")
    http_status="${response: -3}"

    if [ "$http_status" -eq 200 ]; then
        echo "✅ $name saved to $output"
    else
        echo "❌ Failed to fetch $name (Status: $http_status)" >> "$LOG_FILE"
        rm -f "$output"
    fi
}

# Trap to clean up on interrupt (Ctrl+C)
trap 'echo "❌ Script interrupted. Killing all background processes..."; kill ${PIDS[@]} 2>/dev/null; exit 1' SIGINT

# Run all fetches in background
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon" &
    PIDS+=($!)  # Store PID
done

# Wait for all
for pid in "${PIDS[@]}"; do
    wait "$pid"
done

echo "✅ All background fetches completed."
